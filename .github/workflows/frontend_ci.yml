name: CI Pipeline Frontend Service

on:
  push:
    paths:
      - './frontend-service/**' 

jobs:
  editorconfig:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: check if editorconfig exists
        if: ${{ hashFiles('.editorconfig') == '' }}
        run: exit 'editorconfig does not exist.'

      - name: Add checker
        uses: editorconfig-checker/action-editorconfig-checker@main

      - name: Run checker
        run: editorconfig-checker      

  linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: pip install black

      - name: Run the linters
        uses: wearerequired/lint-action@v2
        with:
          black: true

      - name: Format the code with Black
        run:
          black ./frontend-service/*.py

  unit-tests:
    runs-on: ubuntu-latest
    needs: [editorconfig, linters]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install requirements
        working-directory: ./frontend-service
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Unit Test
        working-directory: ./frontend-service
        run: python -m unittest test_frontend_service.py

  scan:
    name: gitleaks
    runs-on: ubuntu-latest
    needs: [editorconfig, linters, unit-tests]
    steps:
      - uses: actions/checkout@v3
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  code-smells:
    name: SonarCloud
    needs: [editorconfig, linters, unit-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 
      - uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-push-test:
    runs-on: ubuntu-latest
    needs: [editorconfig, linters, unit-tests, scan, code-smells]

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend-service
          file: ./frontend-service/Dockerfile
          push: true
          tags: '${{ secrets.DOCKERHUB_USERNAME }}/frontend-service:${{ github.sha }}'
          platforms: linux/amd64, linux/arm64

      - name: Scan with trivy
        id: trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/frontend-service:${{ github.sha }}'
          severity: 'CRITICAL'