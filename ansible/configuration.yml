- hosts: all
  become: yes

  vars:
    docker_apt_key_url: https://download.docker.com/linux/ubuntu/gpg
    docker_apt_repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    docker_packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    common_packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    kubernetes_packages:
      - kubelet 
      - kubeadm 
      - kubectl
    kubernetes_apt_key_url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    kubernetes_apt_repo: "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"
    docker_user: georgi
    node_ip: "192.168.49.2"

  tasks:
    - name: Copy configuration script to remote
      copy:
        src: ../sh/conf.sh
        dest: /
        mode: '0755'

    - name: Execute configuration script
      command: /conf.sh "{{ USERNAME }}" "{{ PASSWORD }}"
      environment:
        USERNAME: "{{ USERNAME }}"
        PASSWORD: "{{ PASSWORD }}"

    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ common_packages }}"
        state: present
        update_cache: yes

    - name: Add an apt signing key for Docker
      apt_key:
        url: "{{ docker_apt_key_url }}"
        state: present

    - name: Add apt repository for stable Docker version
      apt_repository:
        repo: "{{ docker_apt_repo }}"
        state: present

    - name: Install Docker and its dependencies
      apt: 
        name: "{{ docker_packages }}"
        state: present
        update_cache: yes
      notify:
        - Restart Docker

    - name: Add user to Docker group
      user:
        name: "{{ docker_user }}"
        group: docker

    - name: Adding Kubernetes GPG key
      get_url:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        dest: /tmp/kubernetes-archive-keyring.gpg
        mode: '0644'

    - name: Check if Kubernetes GPG keyring file exists
      stat:
        path: /usr/share/keyrings/kubernetes-archive-keyring.gpg
      register: kubernetes_keyring

    - name: Dearmor Kubernetes GPG key
      command: gpg --dearmor -o /usr/share/keyrings/kubernetes-archive-keyring.gpg /tmp/kubernetes-archive-keyring.gpg
      when: not kubernetes_keyring.stat.exists

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: "{{ kubernetes_apt_repo }}"
        state: present
        filename: kubernetes
        
    - name: Update apt package cache
      apt:
        update_cache: yes

    - name: Install Kubernetes binaries
      apt: 
        name: "{{ kubernetes_packages }}"
        state: present
        update_cache: yes

    - name: Configure node IP for kubelet
      lineinfile:
        path: /etc/default/kubelet
        line: "KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}"
      notify:
        - Restart kubelet

  handlers:
    - name: Restart Docker
      service:
        name: docker
        state: restarted

    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted
